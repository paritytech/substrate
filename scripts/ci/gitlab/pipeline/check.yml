# This file is part of .gitlab-ci.yml
# Here are all jobs that are executed during "check" stage

check-runtime:
  stage: check
  extends:
    - .kubernetes-env
    - .test-refs-no-trigger-prs-only
  variables:
    CI_IMAGE: "paritytech/tools:latest"
    GITLAB_API: "https://gitlab.parity.io/api/v4"
    GITHUB_API_PROJECT: "parity%2Finfrastructure%2Fgithub-api"
  script:
    - ./scripts/ci/gitlab/check_runtime.sh
  allow_failure: true

check-signed-tag:
  stage: check
  extends: .kubernetes-env
  variables:
    CI_IMAGE: "paritytech/tools:latest"
  rules:
    - if: $CI_COMMIT_REF_NAME =~ /^ci-release-.*$/
    - if: $CI_COMMIT_REF_NAME =~ /^v[0-9]+\.[0-9]+.*$/ # i.e. v1.0, v2.1rc1
  script:
    - ./scripts/ci/gitlab/check_signed.sh

test-dependency-rules:
  stage: check
  extends:
    - .kubernetes-env
    - .test-refs-no-trigger-prs-only
  variables:
    CI_IMAGE: "paritytech/tools:latest"
  script:
    - ./scripts/ci/gitlab/ensure-deps.sh

test-rust-features:
  stage: check
  extends:
    - .kubernetes-env
    - .test-refs-no-trigger-prs-only
  script:
    - git clone
      --depth=1
      --branch="$PIPELINE_SCRIPTS_TAG"
      https://github.com/paritytech/pipeline-scripts
    - bash ./pipeline-scripts/rust-features.sh .

test-rust-feature-propagation:
  stage: check
  extends:
    - .kubernetes-env
    - .test-refs-no-trigger-prs-only
  script:
    - cargo install --locked --version 0.7.4 -q -f zepter && zepter --version
    - echo "ðŸ‘‰ Hello developer! If you see this CI check failing then it means that one of the crates is missing a feature for one of its dependencies. The output below tells you which feature needs to be added for which dependency to which crate. You can do this by modifying the Cargo.toml file. For more context see the MR where this check was introduced https://github.com/paritytech/substrate/pull/14660"
    - zepter lint propagate-feature --feature try-runtime --left-side-feature-missing=ignore --workspace --feature-enables-dep="try-runtime:frame-try-runtime" --locked
    - zepter lint propagate-feature --feature runtime-benchmarks --left-side-feature-missing=ignore --workspace --feature-enables-dep="runtime-benchmarks:frame-benchmarking" --locked
    - zepter lint propagate-feature --feature std --left-side-feature-missing=ignore --workspace --locked
  allow_failure: true # Experimental

test-prometheus-alerting-rules:
  stage: check
  extends: .kubernetes-env
  variables:
    CI_IMAGE: "paritytech/tools:latest"
  rules:
    - if: $CI_PIPELINE_SOURCE == "pipeline"
      when: never
    - if: $CI_COMMIT_BRANCH
      changes:
        - .gitlab-ci.yml
        - ./scripts/ci/monitoring/**/*
  script:
    - promtool check rules ./scripts/ci/monitoring/alerting-rules/alerting-rules.yaml
    - cat ./scripts/ci/monitoring/alerting-rules/alerting-rules.yaml |
      promtool test rules ./scripts/ci/monitoring/alerting-rules/alerting-rule-tests.yaml
