[package]
name = "sc-service"
version = "0.10.0-dev"
authors = ["Parity Technologies <admin@parity.io>"]
edition = "2021"
license = "GPL-3.0-or-later WITH Classpath-exception-2.0"
homepage = "https://substrate.io"
repository = "https://github.com/paritytech/substrate/"
description = "Substrate service. Starts a thread that spins up the network, client, and extrinsic pool. Manages communication between them."
readme = "README.md"

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[features]
default = ["db"]
# The RocksDB feature activates the RocksDB database backend. If it is not activated, and you pass
# a path to a database, an error will be produced at runtime.
db = ["sc-client-db/with-kvdb-rocksdb", "sc-client-db/with-parity-db"]
wasmtime = ["sc-executor/wasmtime"]
# exposes the client type
test-helpers = []

[dependencies]
thiserror = "1.0.30"
futures = "0.3.16"
jsonrpc-pubsub = "18.0"
jsonrpc-core = "18.0"
rand = "0.7.3"
parking_lot = "0.11.2"
log = "0.4.11"
futures-timer = "3.0.1"
exit-future = "0.2.0"
pin-project = "1.0.8"
hash-db = "0.15.2"
serde = "1.0.132"
serde_json = "1.0.71"
sc-keystore = { version = "4.0.0-dev", path = "../keystore" }
sp-runtime = { version = "4.0.0", path = "../../primitives/runtime" }
sp-trie = { version = "4.0.0", path = "../../primitives/trie" }
sp-externalities = { version = "0.10.0", path = "../../primitives/externalities" }
sc-utils = { version = "4.0.0-dev", path = "../utils" }
sp-version = { version = "4.0.0-dev", path = "../../primitives/version" }
sp-blockchain = { version = "4.0.0-dev", path = "../../primitives/blockchain" }
sp-core = { version = "4.1.0-dev", path = "../../primitives/core" }
sp-keystore = { version = "0.10.0", path = "../../primitives/keystore" }
sp-session = { version = "4.0.0-dev", path = "../../primitives/session" }
sp-state-machine = { version = "0.10.0", path = "../../primitives/state-machine" }
sp-application-crypto = { version = "4.0.0", path = "../../primitives/application-crypto" }
sp-consensus = { version = "0.10.0-dev", path = "../../primitives/consensus/common" }
sc-consensus = { version = "0.10.0-dev", path = "../../client/consensus/common" }
sp-inherents = { version = "4.0.0-dev", path = "../../primitives/inherents" }
sp-storage = { version = "4.0.0", path = "../../primitives/storage" }
sc-network = { version = "0.10.0-dev", path = "../network" }
sc-chain-spec = { version = "4.0.0-dev", path = "../chain-spec" }
sc-client-api = { version = "4.0.0-dev", path = "../api" }
sp-api = { version = "4.0.0-dev", path = "../../primitives/api" }
sc-client-db = { version = "0.10.0-dev", default-features = false, path = "../db" }
codec = { package = "parity-scale-codec", version = "2.0.0" }
sc-executor = { version = "0.10.0-dev", path = "../executor" }
sc-transaction-pool = { version = "4.0.0-dev", path = "../transaction-pool" }
sp-transaction-pool = { version = "4.0.0-dev", path = "../../primitives/transaction-pool" }
sc-transaction-pool-api = { version = "4.0.0-dev", path = "../transaction-pool/api" }
sp-transaction-storage-proof = { version = "4.0.0-dev", path = "../../primitives/transaction-storage-proof" }
sc-rpc-server = { version = "4.0.0-dev", path = "../rpc-servers" }
sc-rpc = { version = "4.0.0-dev", path = "../rpc" }
sc-block-builder = { version = "0.10.0-dev", path = "../block-builder" }
sp-block-builder = { version = "4.0.0-dev", path = "../../primitives/block-builder" }
sc-informant = { version = "0.10.0-dev", path = "../informant" }
sc-telemetry = { version = "4.0.0-dev", path = "../telemetry" }
sc-offchain = { version = "4.0.0-dev", path = "../offchain" }
prometheus-endpoint = { package = "substrate-prometheus-endpoint", path = "../../utils/prometheus", version = "0.10.0-dev" }
sc-tracing = { version = "4.0.0-dev", path = "../tracing" }
sp-tracing = { version = "4.0.0", path = "../../primitives/tracing" }
tracing = "0.1.29"
tracing-futures = { version = "0.2.4" }
parity-util-mem = { version = "0.10.2", default-features = false, features = [
	"primitive-types",
] }
async-trait = "0.1.50"
tokio = { version = "1.15", features = ["time", "rt-multi-thread"] }
tempfile = "3.1.0"
directories = "4.0.1"

[dev-dependencies]
substrate-test-runtime-client = { version = "2.0.0", path = "../../test-utils/runtime/client" }
substrate-test-runtime = { version = "2.0.0", path = "../../test-utils/runtime/" }
async-std = { version = "1.10.0", default-features = false }
