// This file is part of Substrate.

// Copyright (C) 2023 Parity Technologies (UK) Ltd.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for pallet_contracts
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-02-07, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `runner-b3zmxxc-project-145-concurrent-0`, CPU: `Intel(R) Xeon(R) CPU @ 2.60GHz`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/production/substrate
// benchmark
// pallet
// --chain=dev
// --steps=50
// --repeat=20
// --pallet=pallet_contracts
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output=./frame/contracts/src/weights.rs
// --header=./HEADER-APACHE2
// --template=./.maintain/frame-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_contracts.
pub trait WeightInfo {
	fn on_process_deletion_queue_batch() -> Weight;
	fn on_initialize_per_trie_key(k: u32, ) -> Weight;
	fn on_initialize_per_queue_item(q: u32, ) -> Weight;
	fn reinstrument(c: u32, ) -> Weight;
	fn call_with_code_per_byte(c: u32, ) -> Weight;
	fn instantiate_with_code(c: u32, i: u32, s: u32, ) -> Weight;
	fn instantiate(i: u32, s: u32, ) -> Weight;
	fn call() -> Weight;
	fn upload_code(c: u32, ) -> Weight;
	fn remove_code() -> Weight;
	fn set_code() -> Weight;
	fn seal_caller(r: u32, ) -> Weight;
	fn seal_is_contract(r: u32, ) -> Weight;
	fn seal_code_hash(r: u32, ) -> Weight;
	fn seal_own_code_hash(r: u32, ) -> Weight;
	fn seal_caller_is_origin(r: u32, ) -> Weight;
	fn seal_address(r: u32, ) -> Weight;
	fn seal_gas_left(r: u32, ) -> Weight;
	fn seal_balance(r: u32, ) -> Weight;
	fn seal_value_transferred(r: u32, ) -> Weight;
	fn seal_minimum_balance(r: u32, ) -> Weight;
	fn seal_block_number(r: u32, ) -> Weight;
	fn seal_now(r: u32, ) -> Weight;
	fn seal_weight_to_fee(r: u32, ) -> Weight;
	fn seal_gas(r: u32, ) -> Weight;
	fn seal_input(r: u32, ) -> Weight;
	fn seal_input_per_kb(n: u32, ) -> Weight;
	fn seal_return(r: u32, ) -> Weight;
	fn seal_return_per_kb(n: u32, ) -> Weight;
	fn seal_terminate(r: u32, ) -> Weight;
	fn seal_random(r: u32, ) -> Weight;
	fn seal_deposit_event(r: u32, ) -> Weight;
	fn seal_deposit_event_per_topic_and_kb(t: u32, n: u32, ) -> Weight;
	fn seal_debug_message(r: u32, ) -> Weight;
	fn seal_set_storage(r: u32, ) -> Weight;
	fn seal_set_storage_per_new_kb(n: u32, ) -> Weight;
	fn seal_set_storage_per_old_kb(n: u32, ) -> Weight;
	fn seal_clear_storage(r: u32, ) -> Weight;
	fn seal_clear_storage_per_kb(n: u32, ) -> Weight;
	fn seal_get_storage(r: u32, ) -> Weight;
	fn seal_get_storage_per_kb(n: u32, ) -> Weight;
	fn seal_contains_storage(r: u32, ) -> Weight;
	fn seal_contains_storage_per_kb(n: u32, ) -> Weight;
	fn seal_take_storage(r: u32, ) -> Weight;
	fn seal_take_storage_per_kb(n: u32, ) -> Weight;
	fn seal_transfer(r: u32, ) -> Weight;
	fn seal_call(r: u32, ) -> Weight;
	fn seal_delegate_call(r: u32, ) -> Weight;
	fn seal_call_per_transfer_clone_kb(t: u32, c: u32, ) -> Weight;
	fn seal_instantiate(r: u32, ) -> Weight;
	fn seal_instantiate_per_transfer_input_salt_kb(t: u32, i: u32, s: u32, ) -> Weight;
	fn seal_hash_sha2_256(r: u32, ) -> Weight;
	fn seal_hash_sha2_256_per_kb(n: u32, ) -> Weight;
	fn seal_hash_keccak_256(r: u32, ) -> Weight;
	fn seal_hash_keccak_256_per_kb(n: u32, ) -> Weight;
	fn seal_hash_blake2_256(r: u32, ) -> Weight;
	fn seal_hash_blake2_256_per_kb(n: u32, ) -> Weight;
	fn seal_hash_blake2_128(r: u32, ) -> Weight;
	fn seal_hash_blake2_128_per_kb(n: u32, ) -> Weight;
	fn seal_ecdsa_recover(r: u32, ) -> Weight;
	fn seal_ecdsa_to_eth_address(r: u32, ) -> Weight;
	fn seal_set_code_hash(r: u32, ) -> Weight;
	fn seal_reentrance_count(r: u32, ) -> Weight;
	fn seal_account_reentrance_count(r: u32, ) -> Weight;
	fn seal_instantiation_nonce(r: u32, ) -> Weight;
	fn instr_i64const(r: u32, ) -> Weight;
	fn instr_i64load(r: u32, ) -> Weight;
	fn instr_i64store(r: u32, ) -> Weight;
	fn instr_select(r: u32, ) -> Weight;
	fn instr_if(r: u32, ) -> Weight;
	fn instr_br(r: u32, ) -> Weight;
	fn instr_br_if(r: u32, ) -> Weight;
	fn instr_br_table(r: u32, ) -> Weight;
	fn instr_br_table_per_entry(e: u32, ) -> Weight;
	fn instr_call(r: u32, ) -> Weight;
	fn instr_call_indirect(r: u32, ) -> Weight;
	fn instr_call_indirect_per_param(p: u32, ) -> Weight;
	fn instr_call_per_local(l: u32, ) -> Weight;
	fn instr_local_get(r: u32, ) -> Weight;
	fn instr_local_set(r: u32, ) -> Weight;
	fn instr_local_tee(r: u32, ) -> Weight;
	fn instr_global_get(r: u32, ) -> Weight;
	fn instr_global_set(r: u32, ) -> Weight;
	fn instr_memory_current(r: u32, ) -> Weight;
	fn instr_memory_grow(r: u32, ) -> Weight;
	fn instr_i64clz(r: u32, ) -> Weight;
	fn instr_i64ctz(r: u32, ) -> Weight;
	fn instr_i64popcnt(r: u32, ) -> Weight;
	fn instr_i64eqz(r: u32, ) -> Weight;
	fn instr_i64extendsi32(r: u32, ) -> Weight;
	fn instr_i64extendui32(r: u32, ) -> Weight;
	fn instr_i32wrapi64(r: u32, ) -> Weight;
	fn instr_i64eq(r: u32, ) -> Weight;
	fn instr_i64ne(r: u32, ) -> Weight;
	fn instr_i64lts(r: u32, ) -> Weight;
	fn instr_i64ltu(r: u32, ) -> Weight;
	fn instr_i64gts(r: u32, ) -> Weight;
	fn instr_i64gtu(r: u32, ) -> Weight;
	fn instr_i64les(r: u32, ) -> Weight;
	fn instr_i64leu(r: u32, ) -> Weight;
	fn instr_i64ges(r: u32, ) -> Weight;
	fn instr_i64geu(r: u32, ) -> Weight;
	fn instr_i64add(r: u32, ) -> Weight;
	fn instr_i64sub(r: u32, ) -> Weight;
	fn instr_i64mul(r: u32, ) -> Weight;
	fn instr_i64divs(r: u32, ) -> Weight;
	fn instr_i64divu(r: u32, ) -> Weight;
	fn instr_i64rems(r: u32, ) -> Weight;
	fn instr_i64remu(r: u32, ) -> Weight;
	fn instr_i64and(r: u32, ) -> Weight;
	fn instr_i64or(r: u32, ) -> Weight;
	fn instr_i64xor(r: u32, ) -> Weight;
	fn instr_i64shl(r: u32, ) -> Weight;
	fn instr_i64shrs(r: u32, ) -> Weight;
	fn instr_i64shru(r: u32, ) -> Weight;
	fn instr_i64rotl(r: u32, ) -> Weight;
	fn instr_i64rotr(r: u32, ) -> Weight;
}

/// Weights for pallet_contracts using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: Contracts DeletionQueue (r:1 w:0)
	/// Proof: Contracts DeletionQueue (max_values: Some(1), max_size: Some(16642), added: 17137, mode: Ignored)
	fn on_process_deletion_queue_batch() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `109`
		//  Estimated: `0`
		// Minimum execution time: 2_518 nanoseconds.
		Weight::from_ref_time(2_694_000)
			.saturating_add(T::DbWeight::get().reads(1_u64))
	}
	/// Storage: Skipped Metadata (r:0 w:0)
	/// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `k` is `[0, 1024]`.
	fn on_initialize_per_trie_key(k: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `481 + k * (69 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 10_155 nanoseconds.
		Weight::from_ref_time(10_444_000)
			// Standard Error: 995
			.saturating_add(Weight::from_ref_time(1_180_976).saturating_mul(k.into()))
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(k.into())))
	}
	/// Storage: Contracts DeletionQueue (r:1 w:1)
	/// Proof: Contracts DeletionQueue (max_values: Some(1), max_size: Some(16642), added: 17137, mode: Ignored)
	/// The range of component `q` is `[0, 128]`.
	fn on_initialize_per_queue_item(q: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `281 + q * (33 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 2_566 nanoseconds.
		Weight::from_ref_time(10_706_837)
			// Standard Error: 5_490
			.saturating_add(Weight::from_ref_time(1_467_201).saturating_mul(q.into()))
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Contracts PristineCode (r:1 w:0)
	/// Proof: Contracts PristineCode (max_values: None, max_size: Some(125988), added: 128463, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:0 w:1)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// The range of component `c` is `[0, 61717]`.
	fn reinstrument(c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `270 + c * (1 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 29_106 nanoseconds.
		Weight::from_ref_time(32_232_869)
			// Standard Error: 51
			.saturating_add(Weight::from_ref_time(55_235).saturating_mul(c.into()))
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `c` is `[0, 125952]`.
	fn call_with_code_per_byte(c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `771`
		//  Estimated: `0`
		// Minimum execution time: 333_374 nanoseconds.
		Weight::from_ref_time(372_141_513)
			// Standard Error: 28
			.saturating_add(Weight::from_ref_time(33_633).saturating_mul(c.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: Contracts CodeStorage (r:1 w:1)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Contracts Nonce (r:1 w:1)
	/// Proof: Contracts Nonce (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: System EventTopics (r:3 w:3)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// Storage: Contracts PristineCode (r:0 w:1)
	/// Proof: Contracts PristineCode (max_values: None, max_size: Some(125988), added: 128463, mode: Ignored)
	/// Storage: Contracts OwnerInfoOf (r:0 w:1)
	/// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
	/// The range of component `c` is `[0, 61717]`.
	/// The range of component `i` is `[0, 1048576]`.
	/// The range of component `s` is `[0, 1048576]`.
	fn instantiate_with_code(c: u32, i: u32, s: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `257`
		//  Estimated: `0`
		// Minimum execution time: 4_317_064 nanoseconds.
		Weight::from_ref_time(518_628_215)
			// Standard Error: 500
			.saturating_add(Weight::from_ref_time(106_599).saturating_mul(c.into()))
			// Standard Error: 29
			.saturating_add(Weight::from_ref_time(1_686).saturating_mul(i.into()))
			// Standard Error: 29
			.saturating_add(Weight::from_ref_time(2_220).saturating_mul(s.into()))
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	/// Storage: Contracts CodeStorage (r:1 w:1)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Contracts Nonce (r:1 w:1)
	/// Proof: Contracts Nonce (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts OwnerInfoOf (r:1 w:1)
	/// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `i` is `[0, 1048576]`.
	/// The range of component `s` is `[0, 1048576]`.
	fn instantiate(i: u32, s: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `533`
		//  Estimated: `0`
		// Minimum execution time: 2_310_564 nanoseconds.
		Weight::from_ref_time(268_534_086)
			// Standard Error: 13
			.saturating_add(Weight::from_ref_time(1_951).saturating_mul(i.into()))
			// Standard Error: 13
			.saturating_add(Weight::from_ref_time(2_158).saturating_mul(s.into()))
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(7_u64))
	}
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	fn call() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `823`
		//  Estimated: `0`
		// Minimum execution time: 143_803 nanoseconds.
		Weight::from_ref_time(150_433_000)
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: Contracts CodeStorage (r:1 w:1)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: System EventTopics (r:1 w:1)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// Storage: Contracts PristineCode (r:0 w:1)
	/// Proof: Contracts PristineCode (max_values: None, max_size: Some(125988), added: 128463, mode: Ignored)
	/// Storage: Contracts OwnerInfoOf (r:0 w:1)
	/// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
	/// The range of component `c` is `[0, 61717]`.
	fn upload_code(c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `109`
		//  Estimated: `0`
		// Minimum execution time: 336_890 nanoseconds.
		Weight::from_ref_time(362_972_579)
			// Standard Error: 84
			.saturating_add(Weight::from_ref_time(105_106).saturating_mul(c.into()))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: Contracts OwnerInfoOf (r:1 w:1)
	/// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
	/// Storage: System EventTopics (r:1 w:1)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:0 w:1)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Contracts PristineCode (r:0 w:1)
	/// Proof: Contracts PristineCode (max_values: None, max_size: Some(125988), added: 128463, mode: Ignored)
	fn remove_code() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `287`
		//  Estimated: `0`
		// Minimum execution time: 26_918 nanoseconds.
		Weight::from_ref_time(28_183_000)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts OwnerInfoOf (r:2 w:2)
	/// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
	/// Storage: System EventTopics (r:3 w:3)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	fn set_code() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `634`
		//  Estimated: `0`
		// Minimum execution time: 32_247 nanoseconds.
		Weight::from_ref_time(33_726_000)
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_caller(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `845 + r * (480 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 303_033 nanoseconds.
		Weight::from_ref_time(345_760_876)
			// Standard Error: 35_445
			.saturating_add(Weight::from_ref_time(18_928_304).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1601 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_is_contract(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `882 + r * (19218 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 319_745 nanoseconds.
		Weight::from_ref_time(183_085_497)
			// Standard Error: 580_871
			.saturating_add(Weight::from_ref_time(289_985_446).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().reads((80_u64).saturating_mul(r.into())))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1601 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_code_hash(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `889 + r * (19539 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 319_783 nanoseconds.
		Weight::from_ref_time(193_972_029)
			// Standard Error: 650_213
			.saturating_add(Weight::from_ref_time(339_499_364).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().reads((80_u64).saturating_mul(r.into())))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_own_code_hash(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `852 + r * (480 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 322_459 nanoseconds.
		Weight::from_ref_time(347_391_264)
			// Standard Error: 37_446
			.saturating_add(Weight::from_ref_time(23_689_128).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_caller_is_origin(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `842 + r * (240 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 321_633 nanoseconds.
		Weight::from_ref_time(343_609_555)
			// Standard Error: 32_141
			.saturating_add(Weight::from_ref_time(12_836_822).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_address(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `846 + r * (480 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 320_256 nanoseconds.
		Weight::from_ref_time(347_337_016)
			// Standard Error: 86_962
			.saturating_add(Weight::from_ref_time(18_945_148).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_gas_left(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `847 + r * (480 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 320_701 nanoseconds.
		Weight::from_ref_time(347_077_648)
			// Standard Error: 45_192
			.saturating_add(Weight::from_ref_time(18_616_839).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:2 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_balance(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1017 + r * (480 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 321_020 nanoseconds.
		Weight::from_ref_time(358_820_427)
			// Standard Error: 73_696
			.saturating_add(Weight::from_ref_time(105_926_387).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_value_transferred(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `856 + r * (480 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 320_390 nanoseconds.
		Weight::from_ref_time(348_544_668)
			// Standard Error: 37_426
			.saturating_add(Weight::from_ref_time(18_503_515).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_minimum_balance(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `854 + r * (480 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 321_295 nanoseconds.
		Weight::from_ref_time(347_377_745)
			// Standard Error: 31_059
			.saturating_add(Weight::from_ref_time(18_403_330).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_block_number(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `851 + r * (480 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 335_470 nanoseconds.
		Weight::from_ref_time(346_390_121)
			// Standard Error: 37_609
			.saturating_add(Weight::from_ref_time(18_753_198).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_now(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `842 + r * (480 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 325_245 nanoseconds.
		Weight::from_ref_time(347_996_039)
			// Standard Error: 38_177
			.saturating_add(Weight::from_ref_time(18_438_964).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: TransactionPayment NextFeeMultiplier (r:1 w:0)
	/// Proof: TransactionPayment NextFeeMultiplier (max_values: Some(1), max_size: Some(16), added: 511, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_weight_to_fee(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `919 + r * (800 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 316_458 nanoseconds.
		Weight::from_ref_time(356_265_248)
			// Standard Error: 74_058
			.saturating_add(Weight::from_ref_time(100_405_801).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_gas(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `809 + r * (320 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 129_522 nanoseconds.
		Weight::from_ref_time(141_284_953)
			// Standard Error: 22_889
			.saturating_add(Weight::from_ref_time(8_992_473).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_input(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `844 + r * (480 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 324_369 nanoseconds.
		Weight::from_ref_time(347_732_643)
			// Standard Error: 35_172
			.saturating_add(Weight::from_ref_time(17_060_324).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `n` is `[0, 1024]`.
	fn seal_input_per_kb(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1324`
		//  Estimated: `0`
		// Minimum execution time: 341_790 nanoseconds.
		Weight::from_ref_time(648_404_995)
			// Standard Error: 18_261
			.saturating_add(Weight::from_ref_time(9_800_991).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 1]`.
	fn seal_return(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `832 + r * (45 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 297_343 nanoseconds.
		Weight::from_ref_time(340_449_069)
			// Standard Error: 955_565
			.saturating_add(Weight::from_ref_time(59_730).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `n` is `[0, 1024]`.
	fn seal_return_per_kb(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `842`
		//  Estimated: `0`
		// Minimum execution time: 315_184 nanoseconds.
		Weight::from_ref_time(343_063_081)
			// Standard Error: 854
			.saturating_add(Weight::from_ref_time(209_289).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:3 w:3)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: Contracts DeletionQueue (r:1 w:1)
	/// Proof: Contracts DeletionQueue (max_values: Some(1), max_size: Some(16642), added: 17137, mode: Ignored)
	/// Storage: Contracts OwnerInfoOf (r:1 w:1)
	/// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
	/// Storage: System EventTopics (r:3 w:3)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 1]`.
	fn seal_terminate(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `874 + r * (280 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 304_812 nanoseconds.
		Weight::from_ref_time(343_751_771)
			// Standard Error: 1_072_006
			.saturating_add(Weight::from_ref_time(70_142_528).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().reads((5_u64).saturating_mul(r.into())))
			.saturating_add(T::DbWeight::get().writes(3_u64))
			.saturating_add(T::DbWeight::get().writes((6_u64).saturating_mul(r.into())))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: RandomnessCollectiveFlip RandomMaterial (r:1 w:0)
	/// Proof: RandomnessCollectiveFlip RandomMaterial (max_values: Some(1), max_size: Some(2594), added: 3089, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_random(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `889 + r * (800 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 311_640 nanoseconds.
		Weight::from_ref_time(359_784_282)
			// Standard Error: 68_241
			.saturating_add(Weight::from_ref_time(123_543_639).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_deposit_event(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `842 + r * (800 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 303_579 nanoseconds.
		Weight::from_ref_time(350_386_488)
			// Standard Error: 258_220
			.saturating_add(Weight::from_ref_time(257_493_635).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:322 w:322)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `t` is `[0, 4]`.
	/// The range of component `n` is `[0, 16]`.
	fn seal_deposit_event_per_topic_and_kb(t: u32, n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1778 + t * (2608 ±0) + n * (8 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 1_407_599 nanoseconds.
		Weight::from_ref_time(574_779_765)
			// Standard Error: 630_475
			.saturating_add(Weight::from_ref_time(208_541_499).saturating_mul(t.into()))
			// Standard Error: 173_158
			.saturating_add(Weight::from_ref_time(80_866_428).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().reads((80_u64).saturating_mul(t.into())))
			.saturating_add(T::DbWeight::get().writes(3_u64))
			.saturating_add(T::DbWeight::get().writes((80_u64).saturating_mul(t.into())))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_debug_message(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `841 + r * (800 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 144_821 nanoseconds.
		Weight::from_ref_time(157_661_129)
			// Standard Error: 29_655
			.saturating_add(Weight::from_ref_time(15_609_619).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: Skipped Metadata (r:0 w:0)
	/// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 10]`.
	fn seal_set_storage(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `883 + r * (23417 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 313_848 nanoseconds.
		Weight::from_ref_time(261_524_568)
			// Standard Error: 876_474
			.saturating_add(Weight::from_ref_time(532_083_264).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().reads((80_u64).saturating_mul(r.into())))
			.saturating_add(T::DbWeight::get().writes(3_u64))
			.saturating_add(T::DbWeight::get().writes((80_u64).saturating_mul(r.into())))
	}
	/// Storage: Skipped Metadata (r:0 w:0)
	/// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `n` is `[0, 8]`.
	fn seal_set_storage_per_new_kb(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `12583 + n * (11969 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 496_063 nanoseconds.
		Weight::from_ref_time(718_519_884)
			// Standard Error: 1_893_446
			.saturating_add(Weight::from_ref_time(102_062_769).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(52_u64))
			.saturating_add(T::DbWeight::get().reads((7_u64).saturating_mul(n.into())))
			.saturating_add(T::DbWeight::get().writes(50_u64))
			.saturating_add(T::DbWeight::get().writes((7_u64).saturating_mul(n.into())))
	}
	/// Storage: Skipped Metadata (r:0 w:0)
	/// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `n` is `[0, 8]`.
	fn seal_set_storage_per_old_kb(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `15138 + n * (175775 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 497_364 nanoseconds.
		Weight::from_ref_time(674_997_584)
			// Standard Error: 1_459_810
			.saturating_add(Weight::from_ref_time(77_143_073).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(51_u64))
			.saturating_add(T::DbWeight::get().reads((7_u64).saturating_mul(n.into())))
			.saturating_add(T::DbWeight::get().writes(49_u64))
			.saturating_add(T::DbWeight::get().writes((7_u64).saturating_mul(n.into())))
	}
	/// Storage: Skipped Metadata (r:0 w:0)
	/// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 10]`.
	fn seal_clear_storage(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `876 + r * (23098 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 311_387 nanoseconds.
		Weight::from_ref_time(260_412_043)
			// Standard Error: 931_474
			.saturating_add(Weight::from_ref_time(523_036_757).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().reads((80_u64).saturating_mul(r.into())))
			.saturating_add(T::DbWeight::get().writes(3_u64))
			.saturating_add(T::DbWeight::get().writes((80_u64).saturating_mul(r.into())))
	}
	/// Storage: Skipped Metadata (r:0 w:0)
	/// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `n` is `[0, 8]`.
	fn seal_clear_storage_per_kb(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `14863 + n * (175768 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 430_614 nanoseconds.
		Weight::from_ref_time(636_416_687)
			// Standard Error: 1_584_181
			.saturating_add(Weight::from_ref_time(83_061_343).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(51_u64))
			.saturating_add(T::DbWeight::get().reads((7_u64).saturating_mul(n.into())))
			.saturating_add(T::DbWeight::get().writes(48_u64))
			.saturating_add(T::DbWeight::get().writes((7_u64).saturating_mul(n.into())))
	}
	/// Storage: Skipped Metadata (r:0 w:0)
	/// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 10]`.
	fn seal_get_storage(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `878 + r * (23740 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 319_807 nanoseconds.
		Weight::from_ref_time(270_778_772)
			// Standard Error: 761_711
			.saturating_add(Weight::from_ref_time(431_286_658).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().reads((80_u64).saturating_mul(r.into())))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: Skipped Metadata (r:0 w:0)
	/// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `n` is `[0, 8]`.
	fn seal_get_storage_per_kb(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `15469 + n * (175775 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 416_318 nanoseconds.
		Weight::from_ref_time(604_448_895)
			// Standard Error: 1_533_609
			.saturating_add(Weight::from_ref_time(179_001_486).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(51_u64))
			.saturating_add(T::DbWeight::get().reads((7_u64).saturating_mul(n.into())))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: Skipped Metadata (r:0 w:0)
	/// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 10]`.
	fn seal_contains_storage(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `871 + r * (23100 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 305_576 nanoseconds.
		Weight::from_ref_time(283_242_276)
			// Standard Error: 614_656
			.saturating_add(Weight::from_ref_time(411_153_942).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().reads((80_u64).saturating_mul(r.into())))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: Skipped Metadata (r:0 w:0)
	/// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `n` is `[0, 8]`.
	fn seal_contains_storage_per_kb(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `14814 + n * (175782 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 411_788 nanoseconds.
		Weight::from_ref_time(573_716_626)
			// Standard Error: 1_258_622
			.saturating_add(Weight::from_ref_time(75_851_831).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(51_u64))
			.saturating_add(T::DbWeight::get().reads((7_u64).saturating_mul(n.into())))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: Skipped Metadata (r:0 w:0)
	/// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 10]`.
	fn seal_take_storage(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `879 + r * (23740 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 315_887 nanoseconds.
		Weight::from_ref_time(259_787_231)
			// Standard Error: 880_517
			.saturating_add(Weight::from_ref_time(532_643_757).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().reads((80_u64).saturating_mul(r.into())))
			.saturating_add(T::DbWeight::get().writes(3_u64))
			.saturating_add(T::DbWeight::get().writes((80_u64).saturating_mul(r.into())))
	}
	/// Storage: Skipped Metadata (r:0 w:0)
	/// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `n` is `[0, 8]`.
	fn seal_take_storage_per_kb(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `15470 + n * (175775 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 442_847 nanoseconds.
		Weight::from_ref_time(656_999_617)
			// Standard Error: 1_706_030
			.saturating_add(Weight::from_ref_time(183_662_246).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(51_u64))
			.saturating_add(T::DbWeight::get().reads((7_u64).saturating_mul(n.into())))
			.saturating_add(T::DbWeight::get().writes(48_u64))
			.saturating_add(T::DbWeight::get().writes((7_u64).saturating_mul(n.into())))
	}
	/// Storage: System Account (r:1602 w:1601)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_transfer(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1393 + r * (3602 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 319_591 nanoseconds.
		Weight::from_ref_time(201_855_341)
			// Standard Error: 1_148_585
			.saturating_add(Weight::from_ref_time(1_616_345_253).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().reads((80_u64).saturating_mul(r.into())))
			.saturating_add(T::DbWeight::get().writes(4_u64))
			.saturating_add(T::DbWeight::get().writes((80_u64).saturating_mul(r.into())))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1601 w:1601)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:2 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:1602 w:1602)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_call(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1551 + r * (20511 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 322_220 nanoseconds.
		Weight::from_ref_time(336_570_000)
			// Standard Error: 10_909_360
			.saturating_add(Weight::from_ref_time(25_745_988_306).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().reads((160_u64).saturating_mul(r.into())))
			.saturating_add(T::DbWeight::get().writes(3_u64))
			.saturating_add(T::DbWeight::get().writes((160_u64).saturating_mul(r.into())))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1536 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:1537 w:1537)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_delegate_call(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0 + r * (71670 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 317_654 nanoseconds.
		Weight::from_ref_time(340_877_000)
			// Standard Error: 14_416_439
			.saturating_add(Weight::from_ref_time(25_523_470_421).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().reads((150_u64).saturating_mul(r.into())))
			.saturating_add(T::DbWeight::get().writes(3_u64))
			.saturating_add(T::DbWeight::get().writes((75_u64).saturating_mul(r.into())))
	}
	/// Storage: System Account (r:82 w:81)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:81 w:81)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:2 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:82 w:82)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `t` is `[0, 1]`.
	/// The range of component `c` is `[0, 1024]`.
	fn seal_call_per_transfer_clone_kb(t: u32, c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `21611 + t * (15369 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 9_715_482 nanoseconds.
		Weight::from_ref_time(15_951_853_059)
			// Standard Error: 2_054_946
			.saturating_add(Weight::from_ref_time(14_042_705).saturating_mul(c.into()))
			.saturating_add(T::DbWeight::get().reads(167_u64))
			.saturating_add(T::DbWeight::get().reads((81_u64).saturating_mul(t.into())))
			.saturating_add(T::DbWeight::get().writes(163_u64))
			.saturating_add(T::DbWeight::get().writes((81_u64).saturating_mul(t.into())))
	}
	/// Storage: System Account (r:1602 w:1602)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1601 w:1601)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1601 w:1600)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: Contracts Nonce (r:1 w:1)
	/// Proof: Contracts Nonce (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: Contracts OwnerInfoOf (r:1600 w:1600)
	/// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
	/// Storage: System EventTopics (r:1602 w:1602)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_instantiate(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1613 + r * (25576 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 318_928 nanoseconds.
		Weight::from_ref_time(338_606_000)
			// Standard Error: 32_778_252
			.saturating_add(Weight::from_ref_time(32_291_891_509).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().reads((400_u64).saturating_mul(r.into())))
			.saturating_add(T::DbWeight::get().writes(5_u64))
			.saturating_add(T::DbWeight::get().writes((400_u64).saturating_mul(r.into())))
	}
	/// Storage: System Account (r:82 w:82)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:81 w:81)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:2 w:1)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: Contracts Nonce (r:1 w:1)
	/// Proof: Contracts Nonce (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: Contracts OwnerInfoOf (r:1 w:1)
	/// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
	/// Storage: System EventTopics (r:82 w:82)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `t` is `[0, 1]`.
	/// The range of component `i` is `[0, 960]`.
	/// The range of component `s` is `[0, 960]`.
	fn seal_instantiate_per_transfer_input_salt_kb(t: u32, i: u32, s: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `5666 + t * (17 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 197_760_390 nanoseconds.
		Weight::from_ref_time(14_647_717_038)
			// Standard Error: 137_225_327
			.saturating_add(Weight::from_ref_time(745_555_920).saturating_mul(t.into()))
			// Standard Error: 223_775
			.saturating_add(Weight::from_ref_time(191_166_965).saturating_mul(i.into()))
			// Standard Error: 223_775
			.saturating_add(Weight::from_ref_time(192_453_981).saturating_mul(s.into()))
			.saturating_add(T::DbWeight::get().reads(249_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(t.into())))
			.saturating_add(T::DbWeight::get().writes(247_u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(t.into())))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 1]`.
	fn seal_hash_sha2_256(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `839 + r * (642 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 304_290 nanoseconds.
		Weight::from_ref_time(340_886_102)
			// Standard Error: 968_818
			.saturating_add(Weight::from_ref_time(35_390_497).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `n` is `[0, 1024]`.
	fn seal_hash_sha2_256_per_kb(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1641`
		//  Estimated: `0`
		// Minimum execution time: 344_969 nanoseconds.
		Weight::from_ref_time(360_980_000)
			// Standard Error: 57_074
			.saturating_add(Weight::from_ref_time(86_318_845).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 1]`.
	fn seal_hash_keccak_256(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `841 + r * (642 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 309_845 nanoseconds.
		Weight::from_ref_time(341_865_495)
			// Standard Error: 957_079
			.saturating_add(Weight::from_ref_time(60_803_404).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `n` is `[0, 1024]`.
	fn seal_hash_keccak_256_per_kb(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1643`
		//  Estimated: `0`
		// Minimum execution time: 379_595 nanoseconds.
		Weight::from_ref_time(399_982_000)
			// Standard Error: 59_139
			.saturating_add(Weight::from_ref_time(271_988_782).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 1]`.
	fn seal_hash_blake2_256(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `841 + r * (642 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 300_567 nanoseconds.
		Weight::from_ref_time(343_385_673)
			// Standard Error: 1_020_829
			.saturating_add(Weight::from_ref_time(39_086_326).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `n` is `[0, 1024]`.
	fn seal_hash_blake2_256_per_kb(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1643`
		//  Estimated: `0`
		// Minimum execution time: 357_295 nanoseconds.
		Weight::from_ref_time(370_532_000)
			// Standard Error: 60_768
			.saturating_add(Weight::from_ref_time(122_323_536).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 1]`.
	fn seal_hash_blake2_128(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `841 + r * (679 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 302_295 nanoseconds.
		Weight::from_ref_time(341_306_885)
			// Standard Error: 968_673
			.saturating_add(Weight::from_ref_time(43_030_114).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `n` is `[0, 1024]`.
	fn seal_hash_blake2_128_per_kb(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1643`
		//  Estimated: `0`
		// Minimum execution time: 370_224 nanoseconds.
		Weight::from_ref_time(377_446_000)
			// Standard Error: 57_974
			.saturating_add(Weight::from_ref_time(122_294_135).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 1]`.
	fn seal_ecdsa_recover(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `885 + r * (6083 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 304_565 nanoseconds.
		Weight::from_ref_time(344_122_467)
			// Standard Error: 969_083
			.saturating_add(Weight::from_ref_time(3_768_728_532).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 1]`.
	fn seal_ecdsa_to_eth_address(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `854 + r * (3362 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 301_936 nanoseconds.
		Weight::from_ref_time(342_310_471)
			// Standard Error: 933_233
			.saturating_add(Weight::from_ref_time(987_742_328).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1536 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: Contracts OwnerInfoOf (r:1536 w:1536)
	/// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
	/// Storage: System EventTopics (r:1538 w:1538)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_set_code_hash(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0 + r * (79300 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 323_181 nanoseconds.
		Weight::from_ref_time(339_230_000)
			// Standard Error: 3_688_534
			.saturating_add(Weight::from_ref_time(1_701_873_385).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().reads((225_u64).saturating_mul(r.into())))
			.saturating_add(T::DbWeight::get().writes(3_u64))
			.saturating_add(T::DbWeight::get().writes((150_u64).saturating_mul(r.into())))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_reentrance_count(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `837 + r * (240 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 326_911 nanoseconds.
		Weight::from_ref_time(344_185_408)
			// Standard Error: 30_698
			.saturating_add(Weight::from_ref_time(12_643_694).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_account_reentrance_count(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2056 + r * (3153 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 327_547 nanoseconds.
		Weight::from_ref_time(376_750_694)
			// Standard Error: 120_704
			.saturating_add(Weight::from_ref_time(21_557_236).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: Contracts Nonce (r:1 w:1)
	/// Proof: Contracts Nonce (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_instantiation_nonce(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `840 + r * (240 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 319_508 nanoseconds.
		Weight::from_ref_time(345_854_448)
			// Standard Error: 33_866
			.saturating_add(Weight::from_ref_time(10_520_845).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64const(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 739 nanoseconds.
		Weight::from_ref_time(891_694)
			// Standard Error: 365
			.saturating_add(Weight::from_ref_time(557_533).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64load(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 1_165 nanoseconds.
		Weight::from_ref_time(1_205_396)
			// Standard Error: 3_468
			.saturating_add(Weight::from_ref_time(1_285_762).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64store(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 1_160 nanoseconds.
		Weight::from_ref_time(1_800_939)
			// Standard Error: 1_636
			.saturating_add(Weight::from_ref_time(1_117_425).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_select(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 756 nanoseconds.
		Weight::from_ref_time(988_215)
			// Standard Error: 989
			.saturating_add(Weight::from_ref_time(1_376_119).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_if(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 754 nanoseconds.
		Weight::from_ref_time(790_000)
			// Standard Error: 1_896
			.saturating_add(Weight::from_ref_time(1_650_076).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_br(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 743 nanoseconds.
		Weight::from_ref_time(422_965)
			// Standard Error: 2_149
			.saturating_add(Weight::from_ref_time(872_255).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_br_if(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 766 nanoseconds.
		Weight::from_ref_time(727_846)
			// Standard Error: 2_138
			.saturating_add(Weight::from_ref_time(1_146_197).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_br_table(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 727 nanoseconds.
		Weight::from_ref_time(245_202)
			// Standard Error: 5_338
			.saturating_add(Weight::from_ref_time(1_563_627).saturating_mul(r.into()))
	}
	/// The range of component `e` is `[1, 256]`.
	fn instr_br_table_per_entry(e: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 2_766 nanoseconds.
		Weight::from_ref_time(3_250_487)
			// Standard Error: 75
			.saturating_add(Weight::from_ref_time(3_128).saturating_mul(e.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_call(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 781 nanoseconds.
		Weight::from_ref_time(1_535_920)
			// Standard Error: 3_166
			.saturating_add(Weight::from_ref_time(2_376_122).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_call_indirect(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 897 nanoseconds.
		Weight::from_ref_time(1_562_544)
			// Standard Error: 1_650
			.saturating_add(Weight::from_ref_time(3_252_514).saturating_mul(r.into()))
	}
	/// The range of component `p` is `[0, 128]`.
	fn instr_call_indirect_per_param(p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 4_694 nanoseconds.
		Weight::from_ref_time(5_647_237)
			// Standard Error: 790
			.saturating_add(Weight::from_ref_time(230_200).saturating_mul(p.into()))
	}
	/// The range of component `l` is `[0, 1024]`.
	fn instr_call_per_local(l: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 3_142 nanoseconds.
		Weight::from_ref_time(4_131_058)
			// Standard Error: 51
			.saturating_add(Weight::from_ref_time(72_995).saturating_mul(l.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_local_get(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 2_419 nanoseconds.
		Weight::from_ref_time(2_531_449)
			// Standard Error: 525
			.saturating_add(Weight::from_ref_time(579_759).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_local_set(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 2_398 nanoseconds.
		Weight::from_ref_time(2_669_617)
			// Standard Error: 688
			.saturating_add(Weight::from_ref_time(431_205).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_local_tee(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 2_400 nanoseconds.
		Weight::from_ref_time(2_593_675)
			// Standard Error: 433
			.saturating_add(Weight::from_ref_time(717_569).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_global_get(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 833 nanoseconds.
		Weight::from_ref_time(1_049_297)
			// Standard Error: 352
			.saturating_add(Weight::from_ref_time(872_468).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_global_set(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 866 nanoseconds.
		Weight::from_ref_time(1_181_814)
			// Standard Error: 782
			.saturating_add(Weight::from_ref_time(896_360).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_memory_current(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 1_109 nanoseconds.
		Weight::from_ref_time(1_463_434)
			// Standard Error: 794
			.saturating_add(Weight::from_ref_time(743_220).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 1]`.
	fn instr_memory_grow(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 773 nanoseconds.
		Weight::from_ref_time(860_053)
			// Standard Error: 292_104
			.saturating_add(Weight::from_ref_time(220_200_946).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64clz(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 781 nanoseconds.
		Weight::from_ref_time(893_998)
			// Standard Error: 291
			.saturating_add(Weight::from_ref_time(726_598).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64ctz(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 759 nanoseconds.
		Weight::from_ref_time(935_796)
			// Standard Error: 355
			.saturating_add(Weight::from_ref_time(722_336).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64popcnt(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 765 nanoseconds.
		Weight::from_ref_time(891_609)
			// Standard Error: 339
			.saturating_add(Weight::from_ref_time(728_615).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64eqz(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 765 nanoseconds.
		Weight::from_ref_time(902_066)
			// Standard Error: 240
			.saturating_add(Weight::from_ref_time(724_947).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64extendsi32(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 781 nanoseconds.
		Weight::from_ref_time(882_839)
			// Standard Error: 534
			.saturating_add(Weight::from_ref_time(721_431).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64extendui32(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 773 nanoseconds.
		Weight::from_ref_time(871_580)
			// Standard Error: 337
			.saturating_add(Weight::from_ref_time(726_140).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i32wrapi64(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 755 nanoseconds.
		Weight::from_ref_time(922_619)
			// Standard Error: 259
			.saturating_add(Weight::from_ref_time(721_240).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64eq(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 784 nanoseconds.
		Weight::from_ref_time(1_147_970)
			// Standard Error: 3_453
			.saturating_add(Weight::from_ref_time(891_333).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64ne(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 780 nanoseconds.
		Weight::from_ref_time(1_051_930)
			// Standard Error: 3_252
			.saturating_add(Weight::from_ref_time(897_035).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64lts(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 743 nanoseconds.
		Weight::from_ref_time(992_902)
			// Standard Error: 879
			.saturating_add(Weight::from_ref_time(934_450).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64ltu(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 739 nanoseconds.
		Weight::from_ref_time(946_995)
			// Standard Error: 410
			.saturating_add(Weight::from_ref_time(955_039).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64gts(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 740 nanoseconds.
		Weight::from_ref_time(1_255_126)
			// Standard Error: 3_566
			.saturating_add(Weight::from_ref_time(886_097).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64gtu(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 776 nanoseconds.
		Weight::from_ref_time(963_248)
			// Standard Error: 805
			.saturating_add(Weight::from_ref_time(954_935).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64les(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 717 nanoseconds.
		Weight::from_ref_time(1_081_234)
			// Standard Error: 3_813
			.saturating_add(Weight::from_ref_time(893_341).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64leu(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 769 nanoseconds.
		Weight::from_ref_time(1_089_573)
			// Standard Error: 3_295
			.saturating_add(Weight::from_ref_time(917_367).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64ges(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 740 nanoseconds.
		Weight::from_ref_time(1_014_643)
			// Standard Error: 3_337
			.saturating_add(Weight::from_ref_time(895_493).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64geu(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 767 nanoseconds.
		Weight::from_ref_time(1_251_936)
			// Standard Error: 3_588
			.saturating_add(Weight::from_ref_time(898_661).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64add(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 736 nanoseconds.
		Weight::from_ref_time(1_295_529)
			// Standard Error: 2_980
			.saturating_add(Weight::from_ref_time(898_444).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64sub(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 733 nanoseconds.
		Weight::from_ref_time(916_467)
			// Standard Error: 697
			.saturating_add(Weight::from_ref_time(955_201).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64mul(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 839 nanoseconds.
		Weight::from_ref_time(953_934)
			// Standard Error: 1_235
			.saturating_add(Weight::from_ref_time(948_537).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64divs(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 723 nanoseconds.
		Weight::from_ref_time(975_582)
			// Standard Error: 1_973
			.saturating_add(Weight::from_ref_time(943_270).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64divu(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 795 nanoseconds.
		Weight::from_ref_time(1_028_390)
			// Standard Error: 2_448
			.saturating_add(Weight::from_ref_time(946_244).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64rems(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 767 nanoseconds.
		Weight::from_ref_time(1_026_926)
			// Standard Error: 1_573
			.saturating_add(Weight::from_ref_time(929_201).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64remu(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 720 nanoseconds.
		Weight::from_ref_time(1_035_900)
			// Standard Error: 2_060
			.saturating_add(Weight::from_ref_time(955_101).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64and(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 769 nanoseconds.
		Weight::from_ref_time(1_233_796)
			// Standard Error: 3_038
			.saturating_add(Weight::from_ref_time(912_786).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64or(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 745 nanoseconds.
		Weight::from_ref_time(1_243_759)
			// Standard Error: 3_027
			.saturating_add(Weight::from_ref_time(917_974).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64xor(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 775 nanoseconds.
		Weight::from_ref_time(1_227_339)
			// Standard Error: 2_646
			.saturating_add(Weight::from_ref_time(914_427).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64shl(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 734 nanoseconds.
		Weight::from_ref_time(970_037)
			// Standard Error: 448
			.saturating_add(Weight::from_ref_time(964_282).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64shrs(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 784 nanoseconds.
		Weight::from_ref_time(935_546)
			// Standard Error: 358
			.saturating_add(Weight::from_ref_time(963_912).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64shru(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 754 nanoseconds.
		Weight::from_ref_time(941_247)
			// Standard Error: 773
			.saturating_add(Weight::from_ref_time(966_545).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64rotl(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 1_785 nanoseconds.
		Weight::from_ref_time(1_185_175)
			// Standard Error: 1_370
			.saturating_add(Weight::from_ref_time(957_334).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64rotr(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 738 nanoseconds.
		Weight::from_ref_time(931_662)
			// Standard Error: 468
			.saturating_add(Weight::from_ref_time(964_727).saturating_mul(r.into()))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	/// Storage: Contracts DeletionQueue (r:1 w:0)
	/// Proof: Contracts DeletionQueue (max_values: Some(1), max_size: Some(16642), added: 17137, mode: Ignored)
	fn on_process_deletion_queue_batch() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `109`
		//  Estimated: `0`
		// Minimum execution time: 2_518 nanoseconds.
		Weight::from_ref_time(2_694_000)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
	}
	/// Storage: Skipped Metadata (r:0 w:0)
	/// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `k` is `[0, 1024]`.
	fn on_initialize_per_trie_key(k: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `481 + k * (69 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 10_155 nanoseconds.
		Weight::from_ref_time(10_444_000)
			// Standard Error: 995
			.saturating_add(Weight::from_ref_time(1_180_976).saturating_mul(k.into()))
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
			.saturating_add(RocksDbWeight::get().writes((1_u64).saturating_mul(k.into())))
	}
	/// Storage: Contracts DeletionQueue (r:1 w:1)
	/// Proof: Contracts DeletionQueue (max_values: Some(1), max_size: Some(16642), added: 17137, mode: Ignored)
	/// The range of component `q` is `[0, 128]`.
	fn on_initialize_per_queue_item(q: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `281 + q * (33 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 2_566 nanoseconds.
		Weight::from_ref_time(10_706_837)
			// Standard Error: 5_490
			.saturating_add(Weight::from_ref_time(1_467_201).saturating_mul(q.into()))
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Contracts PristineCode (r:1 w:0)
	/// Proof: Contracts PristineCode (max_values: None, max_size: Some(125988), added: 128463, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:0 w:1)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// The range of component `c` is `[0, 61717]`.
	fn reinstrument(c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `270 + c * (1 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 29_106 nanoseconds.
		Weight::from_ref_time(32_232_869)
			// Standard Error: 51
			.saturating_add(Weight::from_ref_time(55_235).saturating_mul(c.into()))
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `c` is `[0, 125952]`.
	fn call_with_code_per_byte(c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `771`
		//  Estimated: `0`
		// Minimum execution time: 333_374 nanoseconds.
		Weight::from_ref_time(372_141_513)
			// Standard Error: 28
			.saturating_add(Weight::from_ref_time(33_633).saturating_mul(c.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: Contracts CodeStorage (r:1 w:1)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Contracts Nonce (r:1 w:1)
	/// Proof: Contracts Nonce (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: System EventTopics (r:3 w:3)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// Storage: Contracts PristineCode (r:0 w:1)
	/// Proof: Contracts PristineCode (max_values: None, max_size: Some(125988), added: 128463, mode: Ignored)
	/// Storage: Contracts OwnerInfoOf (r:0 w:1)
	/// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
	/// The range of component `c` is `[0, 61717]`.
	/// The range of component `i` is `[0, 1048576]`.
	/// The range of component `s` is `[0, 1048576]`.
	fn instantiate_with_code(c: u32, i: u32, s: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `257`
		//  Estimated: `0`
		// Minimum execution time: 4_317_064 nanoseconds.
		Weight::from_ref_time(518_628_215)
			// Standard Error: 500
			.saturating_add(Weight::from_ref_time(106_599).saturating_mul(c.into()))
			// Standard Error: 29
			.saturating_add(Weight::from_ref_time(1_686).saturating_mul(i.into()))
			// Standard Error: 29
			.saturating_add(Weight::from_ref_time(2_220).saturating_mul(s.into()))
			.saturating_add(RocksDbWeight::get().reads(8_u64))
			.saturating_add(RocksDbWeight::get().writes(9_u64))
	}
	/// Storage: Contracts CodeStorage (r:1 w:1)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Contracts Nonce (r:1 w:1)
	/// Proof: Contracts Nonce (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts OwnerInfoOf (r:1 w:1)
	/// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `i` is `[0, 1048576]`.
	/// The range of component `s` is `[0, 1048576]`.
	fn instantiate(i: u32, s: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `533`
		//  Estimated: `0`
		// Minimum execution time: 2_310_564 nanoseconds.
		Weight::from_ref_time(268_534_086)
			// Standard Error: 13
			.saturating_add(Weight::from_ref_time(1_951).saturating_mul(i.into()))
			// Standard Error: 13
			.saturating_add(Weight::from_ref_time(2_158).saturating_mul(s.into()))
			.saturating_add(RocksDbWeight::get().reads(8_u64))
			.saturating_add(RocksDbWeight::get().writes(7_u64))
	}
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	fn call() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `823`
		//  Estimated: `0`
		// Minimum execution time: 143_803 nanoseconds.
		Weight::from_ref_time(150_433_000)
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: Contracts CodeStorage (r:1 w:1)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: System EventTopics (r:1 w:1)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// Storage: Contracts PristineCode (r:0 w:1)
	/// Proof: Contracts PristineCode (max_values: None, max_size: Some(125988), added: 128463, mode: Ignored)
	/// Storage: Contracts OwnerInfoOf (r:0 w:1)
	/// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
	/// The range of component `c` is `[0, 61717]`.
	fn upload_code(c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `109`
		//  Estimated: `0`
		// Minimum execution time: 336_890 nanoseconds.
		Weight::from_ref_time(362_972_579)
			// Standard Error: 84
			.saturating_add(Weight::from_ref_time(105_106).saturating_mul(c.into()))
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: Contracts OwnerInfoOf (r:1 w:1)
	/// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
	/// Storage: System EventTopics (r:1 w:1)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:0 w:1)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Contracts PristineCode (r:0 w:1)
	/// Proof: Contracts PristineCode (max_values: None, max_size: Some(125988), added: 128463, mode: Ignored)
	fn remove_code() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `287`
		//  Estimated: `0`
		// Minimum execution time: 26_918 nanoseconds.
		Weight::from_ref_time(28_183_000)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts OwnerInfoOf (r:2 w:2)
	/// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
	/// Storage: System EventTopics (r:3 w:3)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	fn set_code() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `634`
		//  Estimated: `0`
		// Minimum execution time: 32_247 nanoseconds.
		Weight::from_ref_time(33_726_000)
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(6_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_caller(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `845 + r * (480 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 303_033 nanoseconds.
		Weight::from_ref_time(345_760_876)
			// Standard Error: 35_445
			.saturating_add(Weight::from_ref_time(18_928_304).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1601 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_is_contract(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `882 + r * (19218 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 319_745 nanoseconds.
		Weight::from_ref_time(183_085_497)
			// Standard Error: 580_871
			.saturating_add(Weight::from_ref_time(289_985_446).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().reads((80_u64).saturating_mul(r.into())))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1601 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_code_hash(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `889 + r * (19539 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 319_783 nanoseconds.
		Weight::from_ref_time(193_972_029)
			// Standard Error: 650_213
			.saturating_add(Weight::from_ref_time(339_499_364).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().reads((80_u64).saturating_mul(r.into())))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_own_code_hash(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `852 + r * (480 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 322_459 nanoseconds.
		Weight::from_ref_time(347_391_264)
			// Standard Error: 37_446
			.saturating_add(Weight::from_ref_time(23_689_128).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_caller_is_origin(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `842 + r * (240 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 321_633 nanoseconds.
		Weight::from_ref_time(343_609_555)
			// Standard Error: 32_141
			.saturating_add(Weight::from_ref_time(12_836_822).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_address(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `846 + r * (480 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 320_256 nanoseconds.
		Weight::from_ref_time(347_337_016)
			// Standard Error: 86_962
			.saturating_add(Weight::from_ref_time(18_945_148).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_gas_left(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `847 + r * (480 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 320_701 nanoseconds.
		Weight::from_ref_time(347_077_648)
			// Standard Error: 45_192
			.saturating_add(Weight::from_ref_time(18_616_839).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:2 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_balance(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1017 + r * (480 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 321_020 nanoseconds.
		Weight::from_ref_time(358_820_427)
			// Standard Error: 73_696
			.saturating_add(Weight::from_ref_time(105_926_387).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(7_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_value_transferred(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `856 + r * (480 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 320_390 nanoseconds.
		Weight::from_ref_time(348_544_668)
			// Standard Error: 37_426
			.saturating_add(Weight::from_ref_time(18_503_515).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_minimum_balance(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `854 + r * (480 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 321_295 nanoseconds.
		Weight::from_ref_time(347_377_745)
			// Standard Error: 31_059
			.saturating_add(Weight::from_ref_time(18_403_330).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_block_number(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `851 + r * (480 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 335_470 nanoseconds.
		Weight::from_ref_time(346_390_121)
			// Standard Error: 37_609
			.saturating_add(Weight::from_ref_time(18_753_198).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_now(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `842 + r * (480 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 325_245 nanoseconds.
		Weight::from_ref_time(347_996_039)
			// Standard Error: 38_177
			.saturating_add(Weight::from_ref_time(18_438_964).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: TransactionPayment NextFeeMultiplier (r:1 w:0)
	/// Proof: TransactionPayment NextFeeMultiplier (max_values: Some(1), max_size: Some(16), added: 511, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_weight_to_fee(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `919 + r * (800 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 316_458 nanoseconds.
		Weight::from_ref_time(356_265_248)
			// Standard Error: 74_058
			.saturating_add(Weight::from_ref_time(100_405_801).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(7_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_gas(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `809 + r * (320 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 129_522 nanoseconds.
		Weight::from_ref_time(141_284_953)
			// Standard Error: 22_889
			.saturating_add(Weight::from_ref_time(8_992_473).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_input(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `844 + r * (480 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 324_369 nanoseconds.
		Weight::from_ref_time(347_732_643)
			// Standard Error: 35_172
			.saturating_add(Weight::from_ref_time(17_060_324).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `n` is `[0, 1024]`.
	fn seal_input_per_kb(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1324`
		//  Estimated: `0`
		// Minimum execution time: 341_790 nanoseconds.
		Weight::from_ref_time(648_404_995)
			// Standard Error: 18_261
			.saturating_add(Weight::from_ref_time(9_800_991).saturating_mul(n.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 1]`.
	fn seal_return(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `832 + r * (45 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 297_343 nanoseconds.
		Weight::from_ref_time(340_449_069)
			// Standard Error: 955_565
			.saturating_add(Weight::from_ref_time(59_730).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `n` is `[0, 1024]`.
	fn seal_return_per_kb(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `842`
		//  Estimated: `0`
		// Minimum execution time: 315_184 nanoseconds.
		Weight::from_ref_time(343_063_081)
			// Standard Error: 854
			.saturating_add(Weight::from_ref_time(209_289).saturating_mul(n.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:3 w:3)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: Contracts DeletionQueue (r:1 w:1)
	/// Proof: Contracts DeletionQueue (max_values: Some(1), max_size: Some(16642), added: 17137, mode: Ignored)
	/// Storage: Contracts OwnerInfoOf (r:1 w:1)
	/// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
	/// Storage: System EventTopics (r:3 w:3)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 1]`.
	fn seal_terminate(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `874 + r * (280 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 304_812 nanoseconds.
		Weight::from_ref_time(343_751_771)
			// Standard Error: 1_072_006
			.saturating_add(Weight::from_ref_time(70_142_528).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().reads((5_u64).saturating_mul(r.into())))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
			.saturating_add(RocksDbWeight::get().writes((6_u64).saturating_mul(r.into())))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: RandomnessCollectiveFlip RandomMaterial (r:1 w:0)
	/// Proof: RandomnessCollectiveFlip RandomMaterial (max_values: Some(1), max_size: Some(2594), added: 3089, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_random(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `889 + r * (800 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 311_640 nanoseconds.
		Weight::from_ref_time(359_784_282)
			// Standard Error: 68_241
			.saturating_add(Weight::from_ref_time(123_543_639).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(7_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_deposit_event(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `842 + r * (800 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 303_579 nanoseconds.
		Weight::from_ref_time(350_386_488)
			// Standard Error: 258_220
			.saturating_add(Weight::from_ref_time(257_493_635).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:322 w:322)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `t` is `[0, 4]`.
	/// The range of component `n` is `[0, 16]`.
	fn seal_deposit_event_per_topic_and_kb(t: u32, n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1778 + t * (2608 ±0) + n * (8 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 1_407_599 nanoseconds.
		Weight::from_ref_time(574_779_765)
			// Standard Error: 630_475
			.saturating_add(Weight::from_ref_time(208_541_499).saturating_mul(t.into()))
			// Standard Error: 173_158
			.saturating_add(Weight::from_ref_time(80_866_428).saturating_mul(n.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().reads((80_u64).saturating_mul(t.into())))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
			.saturating_add(RocksDbWeight::get().writes((80_u64).saturating_mul(t.into())))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_debug_message(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `841 + r * (800 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 144_821 nanoseconds.
		Weight::from_ref_time(157_661_129)
			// Standard Error: 29_655
			.saturating_add(Weight::from_ref_time(15_609_619).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: Skipped Metadata (r:0 w:0)
	/// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 10]`.
	fn seal_set_storage(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `883 + r * (23417 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 313_848 nanoseconds.
		Weight::from_ref_time(261_524_568)
			// Standard Error: 876_474
			.saturating_add(Weight::from_ref_time(532_083_264).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().reads((80_u64).saturating_mul(r.into())))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
			.saturating_add(RocksDbWeight::get().writes((80_u64).saturating_mul(r.into())))
	}
	/// Storage: Skipped Metadata (r:0 w:0)
	/// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `n` is `[0, 8]`.
	fn seal_set_storage_per_new_kb(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `12583 + n * (11969 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 496_063 nanoseconds.
		Weight::from_ref_time(718_519_884)
			// Standard Error: 1_893_446
			.saturating_add(Weight::from_ref_time(102_062_769).saturating_mul(n.into()))
			.saturating_add(RocksDbWeight::get().reads(52_u64))
			.saturating_add(RocksDbWeight::get().reads((7_u64).saturating_mul(n.into())))
			.saturating_add(RocksDbWeight::get().writes(50_u64))
			.saturating_add(RocksDbWeight::get().writes((7_u64).saturating_mul(n.into())))
	}
	/// Storage: Skipped Metadata (r:0 w:0)
	/// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `n` is `[0, 8]`.
	fn seal_set_storage_per_old_kb(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `15138 + n * (175775 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 497_364 nanoseconds.
		Weight::from_ref_time(674_997_584)
			// Standard Error: 1_459_810
			.saturating_add(Weight::from_ref_time(77_143_073).saturating_mul(n.into()))
			.saturating_add(RocksDbWeight::get().reads(51_u64))
			.saturating_add(RocksDbWeight::get().reads((7_u64).saturating_mul(n.into())))
			.saturating_add(RocksDbWeight::get().writes(49_u64))
			.saturating_add(RocksDbWeight::get().writes((7_u64).saturating_mul(n.into())))
	}
	/// Storage: Skipped Metadata (r:0 w:0)
	/// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 10]`.
	fn seal_clear_storage(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `876 + r * (23098 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 311_387 nanoseconds.
		Weight::from_ref_time(260_412_043)
			// Standard Error: 931_474
			.saturating_add(Weight::from_ref_time(523_036_757).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().reads((80_u64).saturating_mul(r.into())))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
			.saturating_add(RocksDbWeight::get().writes((80_u64).saturating_mul(r.into())))
	}
	/// Storage: Skipped Metadata (r:0 w:0)
	/// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `n` is `[0, 8]`.
	fn seal_clear_storage_per_kb(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `14863 + n * (175768 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 430_614 nanoseconds.
		Weight::from_ref_time(636_416_687)
			// Standard Error: 1_584_181
			.saturating_add(Weight::from_ref_time(83_061_343).saturating_mul(n.into()))
			.saturating_add(RocksDbWeight::get().reads(51_u64))
			.saturating_add(RocksDbWeight::get().reads((7_u64).saturating_mul(n.into())))
			.saturating_add(RocksDbWeight::get().writes(48_u64))
			.saturating_add(RocksDbWeight::get().writes((7_u64).saturating_mul(n.into())))
	}
	/// Storage: Skipped Metadata (r:0 w:0)
	/// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 10]`.
	fn seal_get_storage(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `878 + r * (23740 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 319_807 nanoseconds.
		Weight::from_ref_time(270_778_772)
			// Standard Error: 761_711
			.saturating_add(Weight::from_ref_time(431_286_658).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().reads((80_u64).saturating_mul(r.into())))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: Skipped Metadata (r:0 w:0)
	/// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `n` is `[0, 8]`.
	fn seal_get_storage_per_kb(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `15469 + n * (175775 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 416_318 nanoseconds.
		Weight::from_ref_time(604_448_895)
			// Standard Error: 1_533_609
			.saturating_add(Weight::from_ref_time(179_001_486).saturating_mul(n.into()))
			.saturating_add(RocksDbWeight::get().reads(51_u64))
			.saturating_add(RocksDbWeight::get().reads((7_u64).saturating_mul(n.into())))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: Skipped Metadata (r:0 w:0)
	/// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 10]`.
	fn seal_contains_storage(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `871 + r * (23100 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 305_576 nanoseconds.
		Weight::from_ref_time(283_242_276)
			// Standard Error: 614_656
			.saturating_add(Weight::from_ref_time(411_153_942).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().reads((80_u64).saturating_mul(r.into())))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: Skipped Metadata (r:0 w:0)
	/// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `n` is `[0, 8]`.
	fn seal_contains_storage_per_kb(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `14814 + n * (175782 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 411_788 nanoseconds.
		Weight::from_ref_time(573_716_626)
			// Standard Error: 1_258_622
			.saturating_add(Weight::from_ref_time(75_851_831).saturating_mul(n.into()))
			.saturating_add(RocksDbWeight::get().reads(51_u64))
			.saturating_add(RocksDbWeight::get().reads((7_u64).saturating_mul(n.into())))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: Skipped Metadata (r:0 w:0)
	/// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 10]`.
	fn seal_take_storage(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `879 + r * (23740 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 315_887 nanoseconds.
		Weight::from_ref_time(259_787_231)
			// Standard Error: 880_517
			.saturating_add(Weight::from_ref_time(532_643_757).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().reads((80_u64).saturating_mul(r.into())))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
			.saturating_add(RocksDbWeight::get().writes((80_u64).saturating_mul(r.into())))
	}
	/// Storage: Skipped Metadata (r:0 w:0)
	/// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `n` is `[0, 8]`.
	fn seal_take_storage_per_kb(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `15470 + n * (175775 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 442_847 nanoseconds.
		Weight::from_ref_time(656_999_617)
			// Standard Error: 1_706_030
			.saturating_add(Weight::from_ref_time(183_662_246).saturating_mul(n.into()))
			.saturating_add(RocksDbWeight::get().reads(51_u64))
			.saturating_add(RocksDbWeight::get().reads((7_u64).saturating_mul(n.into())))
			.saturating_add(RocksDbWeight::get().writes(48_u64))
			.saturating_add(RocksDbWeight::get().writes((7_u64).saturating_mul(n.into())))
	}
	/// Storage: System Account (r:1602 w:1601)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_transfer(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1393 + r * (3602 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 319_591 nanoseconds.
		Weight::from_ref_time(201_855_341)
			// Standard Error: 1_148_585
			.saturating_add(Weight::from_ref_time(1_616_345_253).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(7_u64))
			.saturating_add(RocksDbWeight::get().reads((80_u64).saturating_mul(r.into())))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
			.saturating_add(RocksDbWeight::get().writes((80_u64).saturating_mul(r.into())))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1601 w:1601)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:2 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:1602 w:1602)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_call(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1551 + r * (20511 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 322_220 nanoseconds.
		Weight::from_ref_time(336_570_000)
			// Standard Error: 10_909_360
			.saturating_add(Weight::from_ref_time(25_745_988_306).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(7_u64))
			.saturating_add(RocksDbWeight::get().reads((160_u64).saturating_mul(r.into())))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
			.saturating_add(RocksDbWeight::get().writes((160_u64).saturating_mul(r.into())))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1536 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:1537 w:1537)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_delegate_call(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0 + r * (71670 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 317_654 nanoseconds.
		Weight::from_ref_time(340_877_000)
			// Standard Error: 14_416_439
			.saturating_add(Weight::from_ref_time(25_523_470_421).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().reads((150_u64).saturating_mul(r.into())))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
			.saturating_add(RocksDbWeight::get().writes((75_u64).saturating_mul(r.into())))
	}
	/// Storage: System Account (r:82 w:81)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:81 w:81)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:2 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:82 w:82)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `t` is `[0, 1]`.
	/// The range of component `c` is `[0, 1024]`.
	fn seal_call_per_transfer_clone_kb(t: u32, c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `21611 + t * (15369 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 9_715_482 nanoseconds.
		Weight::from_ref_time(15_951_853_059)
			// Standard Error: 2_054_946
			.saturating_add(Weight::from_ref_time(14_042_705).saturating_mul(c.into()))
			.saturating_add(RocksDbWeight::get().reads(167_u64))
			.saturating_add(RocksDbWeight::get().reads((81_u64).saturating_mul(t.into())))
			.saturating_add(RocksDbWeight::get().writes(163_u64))
			.saturating_add(RocksDbWeight::get().writes((81_u64).saturating_mul(t.into())))
	}
	/// Storage: System Account (r:1602 w:1602)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1601 w:1601)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1601 w:1600)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: Contracts Nonce (r:1 w:1)
	/// Proof: Contracts Nonce (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: Contracts OwnerInfoOf (r:1600 w:1600)
	/// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
	/// Storage: System EventTopics (r:1602 w:1602)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_instantiate(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1613 + r * (25576 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 318_928 nanoseconds.
		Weight::from_ref_time(338_606_000)
			// Standard Error: 32_778_252
			.saturating_add(Weight::from_ref_time(32_291_891_509).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(8_u64))
			.saturating_add(RocksDbWeight::get().reads((400_u64).saturating_mul(r.into())))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
			.saturating_add(RocksDbWeight::get().writes((400_u64).saturating_mul(r.into())))
	}
	/// Storage: System Account (r:82 w:82)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:81 w:81)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:2 w:1)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: Contracts Nonce (r:1 w:1)
	/// Proof: Contracts Nonce (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: Contracts OwnerInfoOf (r:1 w:1)
	/// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
	/// Storage: System EventTopics (r:82 w:82)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `t` is `[0, 1]`.
	/// The range of component `i` is `[0, 960]`.
	/// The range of component `s` is `[0, 960]`.
	fn seal_instantiate_per_transfer_input_salt_kb(t: u32, i: u32, s: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `5666 + t * (17 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 197_760_390 nanoseconds.
		Weight::from_ref_time(14_647_717_038)
			// Standard Error: 137_225_327
			.saturating_add(Weight::from_ref_time(745_555_920).saturating_mul(t.into()))
			// Standard Error: 223_775
			.saturating_add(Weight::from_ref_time(191_166_965).saturating_mul(i.into()))
			// Standard Error: 223_775
			.saturating_add(Weight::from_ref_time(192_453_981).saturating_mul(s.into()))
			.saturating_add(RocksDbWeight::get().reads(249_u64))
			.saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(t.into())))
			.saturating_add(RocksDbWeight::get().writes(247_u64))
			.saturating_add(RocksDbWeight::get().writes((1_u64).saturating_mul(t.into())))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 1]`.
	fn seal_hash_sha2_256(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `839 + r * (642 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 304_290 nanoseconds.
		Weight::from_ref_time(340_886_102)
			// Standard Error: 968_818
			.saturating_add(Weight::from_ref_time(35_390_497).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `n` is `[0, 1024]`.
	fn seal_hash_sha2_256_per_kb(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1641`
		//  Estimated: `0`
		// Minimum execution time: 344_969 nanoseconds.
		Weight::from_ref_time(360_980_000)
			// Standard Error: 57_074
			.saturating_add(Weight::from_ref_time(86_318_845).saturating_mul(n.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 1]`.
	fn seal_hash_keccak_256(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `841 + r * (642 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 309_845 nanoseconds.
		Weight::from_ref_time(341_865_495)
			// Standard Error: 957_079
			.saturating_add(Weight::from_ref_time(60_803_404).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `n` is `[0, 1024]`.
	fn seal_hash_keccak_256_per_kb(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1643`
		//  Estimated: `0`
		// Minimum execution time: 379_595 nanoseconds.
		Weight::from_ref_time(399_982_000)
			// Standard Error: 59_139
			.saturating_add(Weight::from_ref_time(271_988_782).saturating_mul(n.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 1]`.
	fn seal_hash_blake2_256(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `841 + r * (642 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 300_567 nanoseconds.
		Weight::from_ref_time(343_385_673)
			// Standard Error: 1_020_829
			.saturating_add(Weight::from_ref_time(39_086_326).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `n` is `[0, 1024]`.
	fn seal_hash_blake2_256_per_kb(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1643`
		//  Estimated: `0`
		// Minimum execution time: 357_295 nanoseconds.
		Weight::from_ref_time(370_532_000)
			// Standard Error: 60_768
			.saturating_add(Weight::from_ref_time(122_323_536).saturating_mul(n.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 1]`.
	fn seal_hash_blake2_128(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `841 + r * (679 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 302_295 nanoseconds.
		Weight::from_ref_time(341_306_885)
			// Standard Error: 968_673
			.saturating_add(Weight::from_ref_time(43_030_114).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `n` is `[0, 1024]`.
	fn seal_hash_blake2_128_per_kb(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1643`
		//  Estimated: `0`
		// Minimum execution time: 370_224 nanoseconds.
		Weight::from_ref_time(377_446_000)
			// Standard Error: 57_974
			.saturating_add(Weight::from_ref_time(122_294_135).saturating_mul(n.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 1]`.
	fn seal_ecdsa_recover(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `885 + r * (6083 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 304_565 nanoseconds.
		Weight::from_ref_time(344_122_467)
			// Standard Error: 969_083
			.saturating_add(Weight::from_ref_time(3_768_728_532).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 1]`.
	fn seal_ecdsa_to_eth_address(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `854 + r * (3362 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 301_936 nanoseconds.
		Weight::from_ref_time(342_310_471)
			// Standard Error: 933_233
			.saturating_add(Weight::from_ref_time(987_742_328).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1536 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: Contracts OwnerInfoOf (r:1536 w:1536)
	/// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
	/// Storage: System EventTopics (r:1538 w:1538)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_set_code_hash(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0 + r * (79300 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 323_181 nanoseconds.
		Weight::from_ref_time(339_230_000)
			// Standard Error: 3_688_534
			.saturating_add(Weight::from_ref_time(1_701_873_385).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().reads((225_u64).saturating_mul(r.into())))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
			.saturating_add(RocksDbWeight::get().writes((150_u64).saturating_mul(r.into())))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_reentrance_count(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `837 + r * (240 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 326_911 nanoseconds.
		Weight::from_ref_time(344_185_408)
			// Standard Error: 30_698
			.saturating_add(Weight::from_ref_time(12_643_694).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_account_reentrance_count(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2056 + r * (3153 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 327_547 nanoseconds.
		Weight::from_ref_time(376_750_694)
			// Standard Error: 120_704
			.saturating_add(Weight::from_ref_time(21_557_236).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Ignored)
	/// Storage: Contracts ContractInfoOf (r:1 w:1)
	/// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
	/// Storage: Contracts CodeStorage (r:1 w:0)
	/// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: Contracts Nonce (r:1 w:1)
	/// Proof: Contracts Nonce (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
	/// Storage: System EventTopics (r:2 w:2)
	/// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
	/// The range of component `r` is `[0, 20]`.
	fn seal_instantiation_nonce(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `840 + r * (240 ±0)`
		//  Estimated: `0`
		// Minimum execution time: 319_508 nanoseconds.
		Weight::from_ref_time(345_854_448)
			// Standard Error: 33_866
			.saturating_add(Weight::from_ref_time(10_520_845).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(7_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64const(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 739 nanoseconds.
		Weight::from_ref_time(891_694)
			// Standard Error: 365
			.saturating_add(Weight::from_ref_time(557_533).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64load(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 1_165 nanoseconds.
		Weight::from_ref_time(1_205_396)
			// Standard Error: 3_468
			.saturating_add(Weight::from_ref_time(1_285_762).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64store(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 1_160 nanoseconds.
		Weight::from_ref_time(1_800_939)
			// Standard Error: 1_636
			.saturating_add(Weight::from_ref_time(1_117_425).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_select(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 756 nanoseconds.
		Weight::from_ref_time(988_215)
			// Standard Error: 989
			.saturating_add(Weight::from_ref_time(1_376_119).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_if(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 754 nanoseconds.
		Weight::from_ref_time(790_000)
			// Standard Error: 1_896
			.saturating_add(Weight::from_ref_time(1_650_076).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_br(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 743 nanoseconds.
		Weight::from_ref_time(422_965)
			// Standard Error: 2_149
			.saturating_add(Weight::from_ref_time(872_255).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_br_if(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 766 nanoseconds.
		Weight::from_ref_time(727_846)
			// Standard Error: 2_138
			.saturating_add(Weight::from_ref_time(1_146_197).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_br_table(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 727 nanoseconds.
		Weight::from_ref_time(245_202)
			// Standard Error: 5_338
			.saturating_add(Weight::from_ref_time(1_563_627).saturating_mul(r.into()))
	}
	/// The range of component `e` is `[1, 256]`.
	fn instr_br_table_per_entry(e: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 2_766 nanoseconds.
		Weight::from_ref_time(3_250_487)
			// Standard Error: 75
			.saturating_add(Weight::from_ref_time(3_128).saturating_mul(e.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_call(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 781 nanoseconds.
		Weight::from_ref_time(1_535_920)
			// Standard Error: 3_166
			.saturating_add(Weight::from_ref_time(2_376_122).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_call_indirect(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 897 nanoseconds.
		Weight::from_ref_time(1_562_544)
			// Standard Error: 1_650
			.saturating_add(Weight::from_ref_time(3_252_514).saturating_mul(r.into()))
	}
	/// The range of component `p` is `[0, 128]`.
	fn instr_call_indirect_per_param(p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 4_694 nanoseconds.
		Weight::from_ref_time(5_647_237)
			// Standard Error: 790
			.saturating_add(Weight::from_ref_time(230_200).saturating_mul(p.into()))
	}
	/// The range of component `l` is `[0, 1024]`.
	fn instr_call_per_local(l: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 3_142 nanoseconds.
		Weight::from_ref_time(4_131_058)
			// Standard Error: 51
			.saturating_add(Weight::from_ref_time(72_995).saturating_mul(l.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_local_get(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 2_419 nanoseconds.
		Weight::from_ref_time(2_531_449)
			// Standard Error: 525
			.saturating_add(Weight::from_ref_time(579_759).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_local_set(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 2_398 nanoseconds.
		Weight::from_ref_time(2_669_617)
			// Standard Error: 688
			.saturating_add(Weight::from_ref_time(431_205).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_local_tee(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 2_400 nanoseconds.
		Weight::from_ref_time(2_593_675)
			// Standard Error: 433
			.saturating_add(Weight::from_ref_time(717_569).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_global_get(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 833 nanoseconds.
		Weight::from_ref_time(1_049_297)
			// Standard Error: 352
			.saturating_add(Weight::from_ref_time(872_468).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_global_set(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 866 nanoseconds.
		Weight::from_ref_time(1_181_814)
			// Standard Error: 782
			.saturating_add(Weight::from_ref_time(896_360).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_memory_current(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 1_109 nanoseconds.
		Weight::from_ref_time(1_463_434)
			// Standard Error: 794
			.saturating_add(Weight::from_ref_time(743_220).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 1]`.
	fn instr_memory_grow(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 773 nanoseconds.
		Weight::from_ref_time(860_053)
			// Standard Error: 292_104
			.saturating_add(Weight::from_ref_time(220_200_946).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64clz(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 781 nanoseconds.
		Weight::from_ref_time(893_998)
			// Standard Error: 291
			.saturating_add(Weight::from_ref_time(726_598).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64ctz(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 759 nanoseconds.
		Weight::from_ref_time(935_796)
			// Standard Error: 355
			.saturating_add(Weight::from_ref_time(722_336).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64popcnt(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 765 nanoseconds.
		Weight::from_ref_time(891_609)
			// Standard Error: 339
			.saturating_add(Weight::from_ref_time(728_615).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64eqz(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 765 nanoseconds.
		Weight::from_ref_time(902_066)
			// Standard Error: 240
			.saturating_add(Weight::from_ref_time(724_947).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64extendsi32(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 781 nanoseconds.
		Weight::from_ref_time(882_839)
			// Standard Error: 534
			.saturating_add(Weight::from_ref_time(721_431).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64extendui32(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 773 nanoseconds.
		Weight::from_ref_time(871_580)
			// Standard Error: 337
			.saturating_add(Weight::from_ref_time(726_140).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i32wrapi64(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 755 nanoseconds.
		Weight::from_ref_time(922_619)
			// Standard Error: 259
			.saturating_add(Weight::from_ref_time(721_240).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64eq(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 784 nanoseconds.
		Weight::from_ref_time(1_147_970)
			// Standard Error: 3_453
			.saturating_add(Weight::from_ref_time(891_333).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64ne(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 780 nanoseconds.
		Weight::from_ref_time(1_051_930)
			// Standard Error: 3_252
			.saturating_add(Weight::from_ref_time(897_035).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64lts(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 743 nanoseconds.
		Weight::from_ref_time(992_902)
			// Standard Error: 879
			.saturating_add(Weight::from_ref_time(934_450).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64ltu(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 739 nanoseconds.
		Weight::from_ref_time(946_995)
			// Standard Error: 410
			.saturating_add(Weight::from_ref_time(955_039).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64gts(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 740 nanoseconds.
		Weight::from_ref_time(1_255_126)
			// Standard Error: 3_566
			.saturating_add(Weight::from_ref_time(886_097).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64gtu(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 776 nanoseconds.
		Weight::from_ref_time(963_248)
			// Standard Error: 805
			.saturating_add(Weight::from_ref_time(954_935).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64les(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 717 nanoseconds.
		Weight::from_ref_time(1_081_234)
			// Standard Error: 3_813
			.saturating_add(Weight::from_ref_time(893_341).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64leu(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 769 nanoseconds.
		Weight::from_ref_time(1_089_573)
			// Standard Error: 3_295
			.saturating_add(Weight::from_ref_time(917_367).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64ges(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 740 nanoseconds.
		Weight::from_ref_time(1_014_643)
			// Standard Error: 3_337
			.saturating_add(Weight::from_ref_time(895_493).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64geu(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 767 nanoseconds.
		Weight::from_ref_time(1_251_936)
			// Standard Error: 3_588
			.saturating_add(Weight::from_ref_time(898_661).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64add(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 736 nanoseconds.
		Weight::from_ref_time(1_295_529)
			// Standard Error: 2_980
			.saturating_add(Weight::from_ref_time(898_444).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64sub(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 733 nanoseconds.
		Weight::from_ref_time(916_467)
			// Standard Error: 697
			.saturating_add(Weight::from_ref_time(955_201).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64mul(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 839 nanoseconds.
		Weight::from_ref_time(953_934)
			// Standard Error: 1_235
			.saturating_add(Weight::from_ref_time(948_537).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64divs(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 723 nanoseconds.
		Weight::from_ref_time(975_582)
			// Standard Error: 1_973
			.saturating_add(Weight::from_ref_time(943_270).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64divu(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 795 nanoseconds.
		Weight::from_ref_time(1_028_390)
			// Standard Error: 2_448
			.saturating_add(Weight::from_ref_time(946_244).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64rems(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 767 nanoseconds.
		Weight::from_ref_time(1_026_926)
			// Standard Error: 1_573
			.saturating_add(Weight::from_ref_time(929_201).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64remu(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 720 nanoseconds.
		Weight::from_ref_time(1_035_900)
			// Standard Error: 2_060
			.saturating_add(Weight::from_ref_time(955_101).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64and(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 769 nanoseconds.
		Weight::from_ref_time(1_233_796)
			// Standard Error: 3_038
			.saturating_add(Weight::from_ref_time(912_786).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64or(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 745 nanoseconds.
		Weight::from_ref_time(1_243_759)
			// Standard Error: 3_027
			.saturating_add(Weight::from_ref_time(917_974).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64xor(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 775 nanoseconds.
		Weight::from_ref_time(1_227_339)
			// Standard Error: 2_646
			.saturating_add(Weight::from_ref_time(914_427).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64shl(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 734 nanoseconds.
		Weight::from_ref_time(970_037)
			// Standard Error: 448
			.saturating_add(Weight::from_ref_time(964_282).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64shrs(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 784 nanoseconds.
		Weight::from_ref_time(935_546)
			// Standard Error: 358
			.saturating_add(Weight::from_ref_time(963_912).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64shru(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 754 nanoseconds.
		Weight::from_ref_time(941_247)
			// Standard Error: 773
			.saturating_add(Weight::from_ref_time(966_545).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64rotl(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 1_785 nanoseconds.
		Weight::from_ref_time(1_185_175)
			// Standard Error: 1_370
			.saturating_add(Weight::from_ref_time(957_334).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 50]`.
	fn instr_i64rotr(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 738 nanoseconds.
		Weight::from_ref_time(931_662)
			// Standard Error: 468
			.saturating_add(Weight::from_ref_time(964_727).saturating_mul(r.into()))
	}
}
